Index: Student_Stub/6 H Streams/src/net/htlgrieskirchen/pos3/streams/Streams.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package net.htlgrieskirchen.pos3.streams;\r\n\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\nimport java.util.Random;\r\nimport java.util.function.Supplier;\r\nimport java.util.stream.Collectors;\r\nimport java.util.stream.IntStream;\r\nimport java.util.stream.Stream;\r\n\r\npublic class Streams {\r\n\r\n    Integer[] randomInts = new Integer[10000];\r\n    String[] randomStrings = new String[10];\r\n\r\n    public Integer[] fillIntArray() {\r\n        Supplier<Integer> supplier = new Supplier<Integer>() {\r\n            @Override\r\n            public Integer get() {\r\n                return (int) (Math.random() * 100);\r\n            }\r\n        };\r\n        randomInts = Stream.generate(supplier).limit(10000).toArray(Integer[]::new);\r\n        return randomInts;\r\n    }\r\n\r\n    public String[] fillStringArray() {\r\n        Supplier<String> supplier = new Supplier<String>() {\r\n            @Override\r\n            public String get() {\r\n                Random random = new Random();\r\n                return random.ints(97, 122 + 1)\r\n                        .limit(13)\r\n                        .collect(StringBuilder::new, StringBuilder::appendCodePoint, StringBuilder::append)\r\n                        .toString();\r\n            }\r\n        };\r\n        randomStrings = Stream.generate(supplier).limit(100).toArray(String[]::new);\r\n        return randomStrings;\r\n    }\r\n\r\n    public double average(int[] numbers) {\r\n        IntStream stream = Arrays.stream(numbers);\r\n        return stream.average().getAsDouble();\r\n    }\r\n\r\n    public List<String> upperCase(String[] strings) {\r\n        Stream<String> stream = Arrays.stream(strings);\r\n        return stream.map(String::toUpperCase).toList();\r\n    }\r\n\r\n    public Weapon findWeaponWithLowestDamage(List<Weapon> weapons) {\r\n        Weapon weaponStream = weapons.stream().sorted((w1, w2) -> Integer.compare(w1.getMinStrength(), w2.getMinStrength())).findFirst().orElse(null);\r\n        return weaponStream;\r\n    }\r\n\r\n    public Weapon findWeaponWithHighestStrength(List<Weapon> weapons) {\r\n        Weapon weaponStream = weapons.stream().sorted((w1, w2) -> Integer.compare(w2.getMinStrength(), w1.getMinStrength())).findFirst().orElse(null);\r\n        return weaponStream;\r\n    }\r\n\r\n    public List<Weapon> collectMissileWeapons(List<Weapon> weapons) {\r\n        List<Weapon> weaponStream = weapons.stream().filter(weapon -> {\r\n            if (weapon.getDamageType().equals(DamageType.MISSILE)) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }).toList();\r\n        return weaponStream;\r\n    }\r\n\r\n    public Weapon findWeaponWithLongestName(List<Weapon> weapons) {\r\n        Weapon weaponStream = weapons.stream().sorted((w1, w2) -> Integer.compare(w2.getName().length(), w1.getName().length())).findFirst().orElse(null);\r\n        return weaponStream;\r\n    }\r\n\r\n    public List<String> toNameList(List<Weapon> weapons) {\r\n        List<String> weaponStream = weapons.stream().map(Weapon::getName).toList();\r\n        return weaponStream;\r\n    }\r\n\r\n    public int[] toSpeedArray(List<Weapon> weapons) {\r\n        List<Integer> weaponStream = weapons.stream().map(Weapon::getSpeed).toList();\r\n        int[] returnArray = new int[weaponStream.size()];\r\n        for (int i = 0; i < weaponStream.size(); i++) {\r\n            returnArray[i] = weaponStream.get(i);\r\n        }\r\n        return returnArray;\r\n    }\r\n\r\n    public int sumUpValues(List<Weapon> weapons) {\r\n        int value = weapons.stream().mapToInt(Weapon::getValue).sum();\r\n        return value;\r\n    }\r\n\r\n    public long sumUpHashCodes(List<Weapon> weapons) {\r\n        int value = weapons.stream().mapToInt(Weapon::hashCode).sum();\r\n        return value;\r\n    }\r\n\r\n    public List<Weapon> removeDuplicates(List<Weapon> weapons) {\r\n        List<Weapon> weaponStream = weapons.stream().distinct().collect(Collectors.toList());\r\n        return weaponStream;\r\n    }\r\n\r\n    public void increaseValuesByTenPercent(List<Weapon> weapons) {\r\n        //implement this\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Student_Stub/6 H Streams/src/net/htlgrieskirchen/pos3/streams/Streams.java b/Student_Stub/6 H Streams/src/net/htlgrieskirchen/pos3/streams/Streams.java
--- a/Student_Stub/6 H Streams/src/net/htlgrieskirchen/pos3/streams/Streams.java	(revision b8e68fbacbdfcfe9acd7966f03676d50824c4d7b)
+++ b/Student_Stub/6 H Streams/src/net/htlgrieskirchen/pos3/streams/Streams.java	(date 1664994835387)
@@ -105,7 +105,6 @@
     }
 
     public void increaseValuesByTenPercent(List<Weapon> weapons) {
-        //implement this
+        weapons.forEach(w -> w.setValue((int) (w.getValue() * 1.1)));
     }
-
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"199c4995-7961-48ea-9968-99daa64b4748\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Student_Stub/6 H Streams/src/net/htlgrieskirchen/pos3/streams/Streams.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Student_Stub/6 H Streams/src/net/htlgrieskirchen/pos3/streams/Streams.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2Fd0pbFij1hjjpCA6VfxHnNrfyf\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"ASKED_ADD_EXTERNAL_FILES\": \"true\",\r\n    \"Downloaded.Files.Path.Enabled\": \"false\",\r\n    \"Repository.Attach.Annotations\": \"false\",\r\n    \"Repository.Attach.JavaDocs\": \"false\",\r\n    \"Repository.Attach.Sources\": \"false\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"settings.editor.selected.configurable\": \"preferences.lookFeel\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\" selected=\"JUnit.StreamsTest\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"net.htlgrieskirchen.pos3.streams.Main\" />\r\n      <module name=\"6 H Streams\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"net.htlgrieskirchen.pos3.streams.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"StreamsTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"6 H Streams\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"net.htlgrieskirchen.pos3.streams.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"net.htlgrieskirchen.pos3.streams\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"net.htlgrieskirchen.pos3.streams.StreamsTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"JUnit.StreamsTest\" />\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"199c4995-7961-48ea-9968-99daa64b4748\" name=\"Changes\" comment=\"\" />\r\n      <created>1664806837833</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1664806837833</updated>\r\n      <workItem from=\"1664806838978\" duration=\"8677000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision b8e68fbacbdfcfe9acd7966f03676d50824c4d7b)
+++ b/.idea/workspace.xml	(date 1664994876685)
@@ -32,23 +32,23 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "ASKED_ADD_EXTERNAL_FILES": "true",
-    "Downloaded.Files.Path.Enabled": "false",
-    "Repository.Attach.Annotations": "false",
-    "Repository.Attach.JavaDocs": "false",
-    "Repository.Attach.Sources": "false",
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "WebServerToolWindowFactoryState": "false",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "settings.editor.selected.configurable": "preferences.lookFeel"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
+    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,
+    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,
+    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,
+    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.lookFeel&quot;
   }
-}]]></component>
+}</component>
   <component name="RunManager" selected="JUnit.StreamsTest">
     <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="net.htlgrieskirchen.pos3.streams.Main" />
@@ -93,7 +93,9 @@
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
       <updated>1664806837833</updated>
-      <workItem from="1664806838978" duration="8677000" />
+      <workItem from="1664806838978" duration="8714000" />
+      <workItem from="1664818075456" duration="335000" />
+      <workItem from="1664994575342" duration="301000" />
     </task>
     <servers />
   </component>
